@model PageLessonViewModel

@{
	ViewData["Title"] = "Lessons";
}

<div class="container">
	<div class="mt-5 border-bottom pb-2">
		<form id="form_id" method="get">
			<div class="d-flex justify-content-between align-items-center">
				<div>
					<select asp-for="CourseId" class="selectpicker" data-live-search="true">
						<option value="0">All</option>
						@foreach (var course in Model.Courses)
						{
							<option value="@course.Id" data-tokens=@course.Name>@course.Name</option>
						}
					</select>
					<button class="btn btn-primary">Submit</button>
				</div>
				<div>
					<a class="btn btn-primary" asp-controller="Lessons" asp-action="Create">Create new lesson</a>
				</div>
			</div>
		</form>
	</div>
	@if (Model.Lessons.Any())
	{
		<table class="table mt-3">
			<tbody class="border-bottom">
				<tr>
					<th class="border-0">
						<div>
							<h3>Title</h3>
						</div>
					</th>
				</tr>
				@foreach (var lesson in Model.Lessons)
				{
					<tr>
						<td>
							<div class="d-flex justify-content-between align-items-center">
								<div style="font-size: 20px;">
									<span>@lesson.Title</span>
								</div>
								<div>
									<a class="options-bar" asp-action="Update" asp-route-id="@lesson.Id">
										<span>Update</span>
									</a>
									<span>|</span>
									<a class="options-bar" asp-action="Delete" asp-route-id="@lesson.Id">
										<span>Delete</span>
									</a>
								</div>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
		<div>
			<nav aria-label="Page navigation example">
				<ul class="pagination justify-content-center">
					<li class="page-item @(Model.HasPrevious == false ? "disabled" : string.Empty)">
						<a class="page-link" asp-route-currentPage=@Model.PreviousPage asp-route-courseId="@Model.CourseId">Previous</a>
					</li>

					@for (int index = Model.CurrentPage - 3; index < Model.CurrentPage; index++)
					{
						if (index >= 1)
						{
							<li class="page-item">
								<a class="page-link" asp-route-currentPage=@index asp-route-courseId="@Model.CourseId">
									@index
								</a>
							</li>
						}
					}

					<li class="page-item active">
						<a class="page-link" asp-route-currentPage=@Model.CurrentPage asp-route-courseId="@Model.CourseId">
							@Model.CurrentPage
						</a>
					</li>

					@for (int index = 1; index < Model.CurrentPage + 3; index++)
					{
						if (Model.TotalPages >= Model.CurrentPage + index)
						{
							<li class="page-item">
								<a class="page-link" asp-route-currentPage=@(Model.CurrentPage + index) asp-route-courseId="@Model.CourseId">
									@(Model.CurrentPage + index)
								</a>
							</li>
						}
					}
					<li class="page-item @(Model.HasNext == false ? "disabled" : string.Empty)">
						<a class="page-link" asp-route-currentPage=@Model.NextPage asp-route-courseId="@Model.CourseId">Next</a>
					</li>
				</ul>
			</nav>
		</div>
	}
	else
	{
		<div class="mt-5 text-center text-danger">
			<h1>No lessons to display</h1>
		</div>
	}
</div>
