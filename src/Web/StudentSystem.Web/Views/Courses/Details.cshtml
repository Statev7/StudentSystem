@using StudentSystem.Services.Review.Models
@model DetailCourseViewModel

@{
	ViewData["Title"] = "Details";
	var count = 0;

	var userId = this.User.GetId();
	ViewBag.CourseId = Model.Id;
}

@inject UserManager<ApplicationUser> userManager

<div class="text-center p-4" style="background-color: #F1F1F1">
	<h1>@Model.Name</h1>
	<h6>Start date: @Model.StartDate</h6>
</div>
<div class="container">
	<div class="shadow-box mt-5 mb-5">
		<div class="p-3 text-center">
			<h3>Lessons</h3>
			<hr />
		</div>
		<div class="container overflow-hidden">
			<div class="row gx-5 mb-3">
				@foreach (var lesson in Model.Lessons)
				{
					<div class="col-sm-12 col-md-6">
						<a asp-controller="Lessons" asp-action="Details" asp-route-id="@lesson.Id" style="text-decoration: none;">
							<div class="p-2 mt-1 border" style="background-color: #f1f1f1;">
								<span class="lesson-title">@(++count). @lesson.Title</span>
							</div>
						</a>
					</div>
				}
			</div>
		</div>
	</div>
	<div class="text-center">
		<button id="show-information-btn" class="btn btn-primary rounded-pill mb-3 w-25 p-2">Show More</button>
	</div>
	<div id="information-box" class="d-none">
		<div class="shadow-box offset-md-1 col-sm col-md-10 mb-5 p-3">
			<h5>Description</h5>
			<div>
				@Model.Description
			</div>
		</div>
		<div class="shadow-box offset-md-1 col-sm col-md-10 mb-5 p-3">
			<h5 class="mb-3">Reviews</h5>
			<div>
				@foreach (var review in Model.Reviews)
				{
					<div class="card mb-4">
						<div class="card-body">
							<p>@review.Content</p>

							<div class="d-flex justify-content-between">
								<div class="d-flex flex-row align-items-center">
									<img src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp" alt="avatar" width="25"
									 height="25" />
									<p class="small pl-2 mb-0 ms-2">@review.Username</p>
								</div>
								<div class="d-flex flex-row align-items-center">
									@if (review.UserId == this.User.GetId() || this.User.IsInRole(GlobalConstants.ADMIN_ROLE))
									{
										<div>
											<a class="options-bar"
											   asp-controller="Reviews"
											   asp-action="Update"
											   asp-route-id=@review.Id
											   asp-route-courseId="@Model.Id">Update
										   </a>
											<span>|</span>
											<a class="options-bar"
											   asp-controller="Reviews"
											   asp-action="Delete"
											   asp-route-reviewId=@review.Id
											   asp-route-courseId="@Model.Id">Delete
											</a>
										</div>
									}
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
	<div class="text-center">
		@if (!this.User.IsUserInCourse(userManager, Model.Id, userId))
		{
			<a asp-controller="Courses"
				asp-action="Apply"
				asp-route-id="@Model.Id"
				class="btn btn-primary rounded-pill w-25 p-2">
				Register for course
			</a>
		}
		else if (this.User.IsUserInCourse(userManager, Model.Id, userId) || this.User.IsAdministrator())
		{
			<div class="text-center mb-3">
				<button id="show-review-form-btn" class="btn btn-primary rounded-pill mb-3 w-25 p-2">Leave a review</button>
			</div>
			<div id="review-form" class="d-none offset-md-1 col-sm col-md-10">
				@{
					var model = new ReviewFormServiceModel();
				}
				<partial name="_ReviewFormPartial" model="model">
			</div>
		}
	</div>
</div>

<script>
	let informationBtn = document.getElementById('show-information-btn');
	let reviewBtn = document.getElementById('show-review-form-btn');

	informationBtn.addEventListener('click', () => someFunc('information-box'));
	reviewBtn.addEventListener('click', () => someFunc('review-form'));

	function someFunc(elementId) {

		let box = document.getElementById(elementId);

		if (box.classList.contains('d-none')) {
			box.classList.remove('d-none');
			switch (elementId) {
				case 'information-box': informationBtn.innerHTML = 'Show Less'; break;
			}
		}
		else {
			box.classList.add('d-none');
			switch (elementId) {
				case 'information-box': informationBtn.innerHTML = 'Show More'; break;
			}
		}
	}
</script>
